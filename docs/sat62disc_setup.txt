#
# This script provides the framework to configure a DISCONNECTED Satellite 6.2 server
#

cat << EOF >> /etc/yum.repos.d/rhel.repo
[rhel72]
name = 7.2 DVD repo
baseurl = http://server.example.org/pub/rh72
enabled = 1
gpgcheck = 1
EOF

rpm --import http://server.example.org/pub/rh72/RPM-GPG-KEY-redhat-release
rpm --import http://server.example.org/pub/rh72/RPM-GPG-KEY-redhat-beta

# Install tools we need
yum install -y vim bash-completion bind-utils policycoreutils-python chrony tree
yum -y update

# Setup chrony
sed -i 's/^server 0.rhel.pool.ntp.org iburst/server ntp1.in.example.org iburst/' /etc/chrony.conf
sed -i 's/^server 1.rhel.pool.ntp.org iburst/server ntp2.in.example.org iburst/' /etc/chrony.conf
sed -i '/^server 2.rhel.pool.ntp.org iburst/d' /etc/chrony.conf
sed -i '/^server 3.rhel.pool.ntp.org iburst/d' /etc/chrony.conf
systemctl enable chronyd
systemctl start chronyd

#####
# Copy the following RPM's to /root from another system: (BZ 1338595)
selinux-policy-3.13.1-60.el7_2.3.noarch.rpm
selinux-policy-targeted-3.13.1-60.el7_2.3.noarch.rpm

cd /root
rpm -Uvh selinux*.rpm
#####

# Copy Satellite 6.2 ISO to /root *
mkdir /media/sat6
mount -o loop /root/satellite-6.2.0-rhel-7-beta-1-x86_64-dvd.iso /media/sat6
cd /media/sat6/
./install_packages
cd && umount /media/sat6

firewall-cmd --permanent --add-service=RH-Satellite-6
firewall-cmd --permanent --add-port 69/udp
firewall-cmd --reload

reboot

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

yum -y install satellite


# Install Satellite
foreman-installer --scenario katello \
  --foreman-initial-organization "MyOrg" \
  --foreman-initial-location "Inside" \
  --foreman-admin-username admin \
  --foreman-admin-password ChangeMe \
  --foreman-proxy-tftp true


# Configure proxy
export http_proxy=""
export https_proxy=$http_proxy
export no_proxy=$http_proxy


mkdir ~/.hammer
chmod 0600 ~/.hammer
cat << EOF > ~/.hammer/cli_config.yml
:foreman:
    :host: 'https://localhost'
    :username: 'admin'
    :password: 'ChangeMe'
EOF
chmod 0600 ~/.hammer/cli_config.yml

# Set default hammer org
hammer defaults add --param-name organization_id --param-value 1

# Import Manifest    (Timeout on large manifest - SEE BZ:1329091)
# Copy manifest from connected system
hammer subscription upload --file /tmp/manifest.zip --organization='MyOrg'

# Set Red Hat CDN Mountpoint
hammer organization update --name "MyOrg" --redhat-repository-url http://localhost/pub/.cdn


# Sync Plan (** TIME IS UTC ** 12:00UTC = 22:00LOCAL)
hammer sync-plan create --interval=daily --name='Daily Sync' --organization-id=1 --sync-date "2016-05-02 12:00:00" --enabled=true

######################
# Configure OSTree support  (Can't import content yet, but we'll enable the support)
yum install ostree pulp-ostree-plugins tfm-rubygem-katello_ostree
foreman-installer --katello-enable-ostree


######################
# Configure Content Mount
#
## If using NFS:
mkdir /var/sat-content
setsebool -P httpd_use_nfs 1
ln -s /var/sat-content /var/www/html/pub/.cdn

cat << EOF >> /etc/fstab
#
# CDN Content Mount
nfs.in.example.org:/redhat_cdn  /var/sat-content     nfs    relatime,vers=3    0 0
EOF


## IF LOCAL:
semanage fcontext -a -t httpd_sys_content_t "/var/sat-content(/.*)?"
restorecon -Rv /var/sat-content
ln -s /var/sat-content /var/www/html/pub/.cdn


#######################
# 3rd Party GPG keys
# Transfer from connected system to /tmp

hammer gpg create --name='RPM-GPG-KEY-EPEL-6' --organization='MyOrg' --key='/tmp/RPM-GPG-KEY-EPEL-6'
hammer gpg create --name='RPM-GPG-KEY-EPEL-7' --organization='MyOrg' --key='/tmp/RPM-GPG-KEY-EPEL-7'
hammer gpg create --name='hpPublicKey1024.pub' --organization='MyOrg' --key='/tmp/hpPublicKey1024.pub'
hammer gpg create --name='hpPublicKey2048.pub' --organization='MyOrg' --key='/tmp/hpPublicKey2048.pub'
hammer gpg create --name='hpPublicKey2048_key1.pub' --organization='MyOrg' --key='/tmp/hpPublicKey2048_key1.pub'

rpm --import /tmp/RPM-GPG-KEY-EPEL-6
rpm --import /tmp/RPM-GPG-KEY-EPEL-7
rpm --import /tmp/hpPublicKey1024.pub
rpm --import /tmp/hpPublicKey2048.pub
rpm --import /tmp/hpPublicKey2048_key1.pub


#######################
# Create 3rd Party Content
hammer product create --name='EPEL-6' --description='EPEL-6' --organization-id=1
hammer repository create --name='epel-6-x86_64' --organization-id=1 --product='EPEL-6' \
  --content-type='yum' --publish-via-http=false --gpg-key='RPM-GPG-KEY-EPEL-6' \
  --url='http://localhost/pub/.cdn/custom/EPEL-6/epel-6-x86_64'
hammer product set-sync-plan --sync-plan-id=1 --organization-id=1 --name='EPEL-6'

hammer product create --name='EPEL-7' --description='EPEL-7' --organization-id=1
hammer repository create --name='epel-7-x86_64' --organization-id=1 --product='EPEL-7' \
  --content-type='yum' --publish-via-http=false --gpg-key='RPM-GPG-KEY-EPEL-7' \
  --url='http://localhost/pub/.cdn/custom/EPEL-7/epel-7-x86_64'
hammer product set-sync-plan --sync-plan-id=1 --organization-id=1 --name='EPEL-7'


########################
# We can't enable Red Hat repos until we have some content imported...
#


#####################################
# Additional Locations etc for testing
hammer location create --name=LOC1
LOC1=$(hammer --csv location list | grep LOC1 | cut -f1 -d,)
hammer location create --name=LOC2
LOC2=$(hammer --csv location list | grep LOC2 | cut -f1 -d,)
hammer location create --name=LOC3
LOC3=$(hammer --csv location list | grep LOC3 | cut -f1 -d,)
hammer location create --name=LOC4
LOC4=$(hammer --csv location list | grep LOC4 | cut -f1 -d,)
hammer location create --name=LOC5
LOC5=$(hammer --csv location list | grep LOC5 | cut -f1 -d,)

hammer location create --name=SUB1 --parent-id=${LOC1}
hammer location create --name=SUB2 --parent-id=${LOC1}
hammer location create --name=SUB3 --parent-id=${LOC1}
hammer location create --name=SUB4 --parent-id=${LOC1}
hammer location create --name=SUB1 --parent-id=${LOC2}
hammer location create --name=SUB2 --parent-id=${LOC2}
hammer location create --name=SUB3 --parent-id=${LOC2}
hammer location create --name=SUB4 --parent-id=${LOC2}

for loc in $(hammer --csv location list | awk -F, {'print $1'} | grep -vi '^ID'); do
  hammer location add-organization --id=${loc} --organization='MyOrg'
done


hammer domain create --organizations='MyOrg' --name='in.example.org'

hammer subnet create --organizations='MyOrg' --domains='in.example.org' --ipam='None' \
  --name='Inside 1' --network='192.168.1.0' --mask='255.255.255.0' --gateway='192.168.1.1' \
  --dns-primary='192.168.1.66' --dns-secondary='192.168.1.67' --boot-mode='Static' --tftp-id=1

hammer subnet create --organizations='MyOrg' --domains='in2.example.org' --ipam='None' \
  --name='Inside 2' --network='192.168.2.0' --mask='255.255.255.0' --gateway='192.168.2.1' \
  --dns-primary='192.168.1.66' --dns-secondary='192.168.1.67' --boot-mode='Static' --tftp-id=1

hammer location add-domain --name Inside --domain in.example.org
hammer location add-subnet --name Inside --subnet 'Inside 1'
hammer location add-subnet --name Inside --subnet 'Inside 2'


hammer lifecycle-environment create --name='Quality' --label='qa' --prior='Library' --organization='MyOrg'
hammer lifecycle-environment create --name='Production' --label='prod' --prior='Quality' --organization='MyOrg'




















- Enable repos (GUI)








- Sync repos










#########################
# Puppet
# (May need selinux module for nfs_t)
hammer product create --name='Puppet Forge' --description='Puppet Forge' --organization='MyOrg'
hammer repository create --name='puppet-forge' --organization=MyOrg --product='Puppet Forge' --content-type='puppet' \
  --url='file:///var/sat-content/puppet-forge/'



#########################
# OVAL (SCAP) content updates <TBD>
hammer product create --name='Red Hat File Content' --description='Red Hat file content' --organization-id=1
hammer repository create --name='OVAL Definitions' --organization-id=1 --product='Red Hat' --content-type='file' --url='https://www.redhat.com/security/data/oval/'



#######################
# Configure Docker Support <TBD>
subscription-manager repos --enable rhel-7-server-extras-rpms
yum -y install docker

groupadd docker
usermod -aG docker foreman

sed -i "s/^OPTIONS=.*/OPTIONS='--selinux-enabled -G docker'/" /etc/sysconfig/docker

systemctl restart docker.service
katello-service restart

hammer compute-resource create --name Docker --organization-ids 1 --provider Docker --url unix://var/run/docker.sock
